#!/usr/bin/make -f

export V=1

# Ubuntu ld adds -Bsymbolic-functions by default, but that prevents FFmpeg from building.
export DEB_LDFLAGS_MAINT_STRIP=-Wl,-Bsymbolic-functions
DEB_BUILD_OPTIONS=nocheck

PATH := $(PATH):/opt/ffmpeg5/usr/bin
LD_LIBRARY_PATH := $(LD_LIBRARY_PATH):/opt/ffmpeg5/usr/lib/x86_64-linux-gnu:/opt/ffmpeg5/usr/lib/i386-linux-gnu
PKG_CONFIG_PATH := $(PKG_CONFIG_PATH):/opt/ffmpeg5/usr/lib/x86_64-linux-gnu/pkgconfig:/opt/ffmpeg5/usr/lib/i386-linux-gnu/pkgconfig

# Most possible features, compatible with effective licensing of GPLv2+
CONFIG := --prefix=/usr \
	--extra-version="$(DEB_REVISION)" \
	--toolchain=hardened \
	--arch=$(DEB_HOST_ARCH_CPU) \
	--disable-stripping \
	--enable-chromaprint \
	--enable-frei0r \
	--enable-gmp  \
	--enable-gnutls \
	--enable-gpl \
	--enable-ladspa \
	--enable-libaom \
	--enable-libaribb24 \
	--enable-libass \
	--enable-libbluray \
	--enable-libbs2b \
	--enable-libcaca \
	--enable-libcdio \
	--enable-libcodec2 \
	--enable-libdav1d \
	--enable-libdc1394 \
	--enable-libdrm \
	--enable-libflite \
	--enable-libfontconfig \
	--enable-libfreetype \
	--enable-libfribidi \
	--enable-libglslang \
	--enable-libgme \
	--enable-libgsm \
	--enable-libiec61883 \
	--enable-libjack \
	--enable-libmodplug \
	--enable-libmp3lame \
	--enable-libmysofa \
	--enable-libopencore-amrnb \
	--enable-libopencore-amrwb \
	--enable-libopencore_amrnb \
	--enable-libopencore_amrwb \
	--enable-libopenjpeg \
	--enable-libopenmpt \
	--enable-libopus \
	--enable-libpulse \
	--enable-librabbitmq \
	--enable-librist \
	--enable-librtmp \
	--enable-librubberband \
	--enable-libshine \
	--enable-libsnappy \
	--enable-libsoxr \
	--enable-libspeex \
	--enable-libsrt \
	--enable-libssh \
	--enable-libsvtav1 \
	--enable-libtesseract \
	--enable-libtheora \
	--enable-libtwolame \
	--enable-libv4l2 \
	--enable-libvidstab \
	--enable-libvo-amrwbenc \
	--enable-libvo_amrwbenc \
	--enable-libvorbis \
	--enable-libvpx \
	--enable-libwebp \
	--enable-libx264 \
	--enable-libx265 \
	--enable-libxml2 \
	--enable-libxvid \
	--enable-libzimg \
	--enable-libzmq \
	--enable-libzvbi \
	--enable-lv2 \
	--enable-omx \
	--enable-openal \
	--enable-opencl \
	--enable-opengl \
	--enable-sdl2 \
	--enable-small \
	--enable-vaapi \
	--enable-version3 \
	--enable-vulkan \
	--enable-chromaprint \
	--enable-frei0r \
	--enable-libx264 \
	--enable-shared \
	--enable-version3 \
	--enable-libaribb24 \
	--enable-libopencore_amrnb \
	--enable-libopencore_amrwb \
	--enable-libtesseract \
	--enable-libvo_amrwbenc \
	--enable-libsmbclient \
	--enable-libplacebo

# avoid librsvg on almost all ports (bug#983344, bug#991556)
ifeq (,$(filter alpha hppa hurd-i386 ia64 kfreebsd-amd64 kfreebsd-i386 m86k sh4 x32,$(DEB_HOST_ARCH)))
CONFIG += --enable-librsvg
endif

ifeq (amd64,$(DEB_HOST_ARCH))
CONFIG += --enable-libmfx \
	--enable-nvenc \
	--enable-amf
endif

# Respect CC/CXX from the environment, if they differ from the default.
# Don't set them if they equal the default, because that disables autodetection needed for cross-building.
ifneq (cc,$(CC))
	CONFIG += --cc=$(CC)
endif
ifneq (g++,$(CXX))
	CONFIG += --cxx=$(CXX)
endif

# Disable assembly optimizations on x32, because they don't work (yet).
ifneq (,$(filter x32,$(DEB_HOST_ARCH)))
	CONFIG += --disable-asm
endif

# Disable some tests which fail when FLT_EVAL_METHOD != 0 (found on i386, m68k and s390x)
ifneq (,$(filter i386 m68k s390x,$(DEB_HOST_ARCH_CPU)))
	CONFIG += --ignore-tests=hapenc-hap-none,hapenc-hapa-none,hapenc-hapq-none
endif

# Set cross-build prefix for compiler, pkg-config...
ifneq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
	CONFIG += --cross-prefix=$(DEB_HOST_GNU_TYPE)- \
		--target-os=$(DEB_HOST_ARCH_OS) \
		--enable-cross-compile
endif

# Use the default debhelper scripts, where possible.
%:
	dh $@ --with pkgkde_symbolshelper

# Add configuration options:
override_dh_auto_configure:
	mkdir -p  debian/standard
	./configure \
	$(CONFIG)

# Remove the subdirectories generated for the flavors.
override_dh_auto_clean:
		echo "disabled"

# Create doxygen documentation:
override_dh_auto_build-indep:
	dh_auto_build -i -- apidoc documentation
	# Create the minified CSS files.
	#  Due to https://github.com/nodejs/node/issues/14752 where nodejs will
	#  leave set O_NONBLOCK on stderr, we pipe stderr through cat which will
	#  create a temporary pipe so this doesn't break the rest of the build.
	#  See: #895154
	(lessc debian/missing-sources/ffmpeg-web/src/less/style.less | cleancss > debian/standard/doc/style.min.css) 2>&1 | cat >&2

override_dh_install:
	$(MAKE) -C debian/standard tools/qt-faststart
	dh_install

# avoid error: Unknown DWARF DW_OP_0
override_dh_dwz:
	dh_dwz -Xlibavcodec -Xlibavfilter -Xlibavutil -Xlibswresample -Xlibswscale
